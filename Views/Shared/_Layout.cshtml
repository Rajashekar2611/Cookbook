<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Cleaver Brooks - BPO</title>
    <base href="~/" />
 <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/dist/vendor.css" asp-append-version="true" />
    <link href="/assets/vendors/toasty-bootstrap.css" rel="stylesheet">



    <style>
        body.iosBugFixCaret.modal-open {
            position: fixed;
            width: 100%;
        }
        .clickable {
            cursor: pointer;
        }
        .sidenav {
            height: 100%;
            width: 0;
            position: fixed;
            z-index: 1;
            top: 0;
            right: 0;
            background-color:#003150;
            overflow-x: hidden;
            transition: 0.5s;
            padding-top: 60px;
        }


.sidenav a {
    padding: 8px 8px 8px 32px;
    text-decoration: none;
    font-size: 18px;
    color: #fff;
    display: block;
    transition: 0.3s;
}

        .sidenav a:hover {
            color: #fdae26;
        }

.sidenav .closebtn {
    position: absolute;
    top: 0;
    right: 25px;
    font-size: 36px;
    margin-left: 50px;
}

#main {
    transition: margin-left .5s;
    padding: 16px;
}

@@media screen and (max-height: 450px) {
  .sidenav {padding-top: 15px;}
  .sidenav a {font-size: 18px;}
}




        .masthead {
            min-height: 30rem;
            position: relative;
            display: table;
            width: 100%;
            height: auto;
            padding-top: 8rem;
            padding-bottom: 8rem;
            background: linear-gradient(90deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.1) 100%));
            background-position: center center;
            background-repeat: no-repeat;
            background-size: cover;
        }

            .masthead h1 {
                font-size: 4rem;
                margin: 0;
                padding: 0;
            }
        body {
            font-family: 'Segoe UI',"Helvetica Neue",Helvetica,Arial,sans-serif;
            font-size: 16px;
            padding-bottom: 0px;
        }

        footer {
            background-color: #003150;
            padding: 20px 0px;
        }


        .footer-top {
            padding-bottom: 10px;
        }

            .footer-top .fa {
                font-size: 18px;
                color: #FFF;
                padding-right: 10px;
            }

            .footer-top a {
                color: #FFF;
                text-decoration: none;
            }

            .footer-top .col-lg-2:hover .fa, .footer-top .col-lg-2:hover a {
                color: #7dabdb;
            }

    </style>
 <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBPYK7C9LFxjeEiNr2Qtc9Kpuy-IM3bPMc&amp;libraries=places&amp;" async="" defer=""></script>
 

    <script>
        function openNav() {
            document.getElementById("mySidenav").style.width = "220px";
            document.getElementById("main").style.marginLeft = "220px";
        }

        function closeNav() {
            document.getElementById("mySidenav").style.width = "0";
            document.getElementById("main").style.marginLeft = "0";
        }

     var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            (document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
          document.getElementById(component).value = '';
          document.getElementById(component).disabled = false;
          
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
          }
        }
        street();
      }

    function street(){
           document.getElementById('autocomplete').value = '';
         var street =document.getElementById('street_number').value;
         var route =document.getElementById('route').value;
          document.getElementById('autocomplete').value = street +' '+ route;
          document.getElementById('street_number').value = '';
    }
      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }


    </script>
    <!-- <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBPYK7C9LFxjeEiNr2Qtc9Kpuy-IM3bPMc&libraries=places"></script> -->
        
</head>
<body>
    @RenderBody()

    @RenderSection("scripts", required: false)
     <footer>
        <center>

            <div class="footer-top">
                <div class="row">  
                    <div class="col-lg-12 ">
                        <h3>
                            <a href="#"><i class="fa fa-facebook fa-3x"></i></a>

                            <a href="#"><i class="fa fa-twitter fa-3x"></i></a>

                            <a href="#"><i class="fa fa-youtube fa-3x"></i></a>

                            <a href="#"><i class="fa fa-linkedin fa-3x"></i></a>
                        </h3>
                </div>
                    <br />
                    <br />
                <div class="col-lg-12 ">
                    <p><h4 style="color:white">&copy; @DateTime.Now.Year -Raj </h4></p>
                </div>

            </div>
                </div>
        </center>


    </footer>
</body>
</html>
